//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace testWS1.brickset.com {
    using System.Xml.Serialization;
    using System.Diagnostics;
    using System.Web.Services;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System;
    
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BricksetAPIv2Soap", Namespace="https://brickset.com/api/")]
    public partial class BricksetAPIv2 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getSetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRecentlyUpdatedSetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAdditionalImagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReviewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInstructionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMinifigCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getThemesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubthemesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getYearsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getThemesForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubthemesForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getYearsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCollectionTotalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback setCollection_ownsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setCollection_wantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback setCollection_userNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setCollection_qtyOwnedOperationCompleted;
        
        private System.Threading.SendOrPostCallback setUserRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback setMinifigCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback setCollectionDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCollectionDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCollectionDetailConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkUserHashOperationCompleted;
        
        /// CodeRemarks
        public BricksetAPIv2() {
            this.Url = "http://brickset.com/api/v2.asmx";
        }
        
        public BricksetAPIv2(string url) {
            this.Url = url;
        }
        
        /// CodeRemarks
        public event getSetsCompletedEventHandler getSetsCompleted;
        
        /// CodeRemarks
        public event getSetCompletedEventHandler getSetCompleted;
        
        /// CodeRemarks
        public event getRecentlyUpdatedSetsCompletedEventHandler getRecentlyUpdatedSetsCompleted;
        
        /// CodeRemarks
        public event getAdditionalImagesCompletedEventHandler getAdditionalImagesCompleted;
        
        /// CodeRemarks
        public event getReviewsCompletedEventHandler getReviewsCompleted;
        
        /// CodeRemarks
        public event getInstructionsCompletedEventHandler getInstructionsCompleted;
        
        /// CodeRemarks
        public event getMinifigCollectionCompletedEventHandler getMinifigCollectionCompleted;
        
        /// CodeRemarks
        public event getThemesCompletedEventHandler getThemesCompleted;
        
        /// CodeRemarks
        public event getSubthemesCompletedEventHandler getSubthemesCompleted;
        
        /// CodeRemarks
        public event getYearsCompletedEventHandler getYearsCompleted;
        
        /// CodeRemarks
        public event getThemesForUserCompletedEventHandler getThemesForUserCompleted;
        
        /// CodeRemarks
        public event getSubthemesForUserCompletedEventHandler getSubthemesForUserCompleted;
        
        /// CodeRemarks
        public event getYearsForUserCompletedEventHandler getYearsForUserCompleted;
        
        /// CodeRemarks
        public event getUserNotesCompletedEventHandler getUserNotesCompleted;
        
        /// CodeRemarks
        public event getCollectionTotalsCompletedEventHandler getCollectionTotalsCompleted;
        
        /// CodeRemarks
        public event setCollectionCompletedEventHandler setCollectionCompleted;
        
        /// CodeRemarks
        public event setCollection_ownsCompletedEventHandler setCollection_ownsCompleted;
        
        /// CodeRemarks
        public event setCollection_wantsCompletedEventHandler setCollection_wantsCompleted;
        
        /// CodeRemarks
        public event setCollection_userNotesCompletedEventHandler setCollection_userNotesCompleted;
        
        /// CodeRemarks
        public event setCollection_qtyOwnedCompletedEventHandler setCollection_qtyOwnedCompleted;
        
        /// CodeRemarks
        public event setUserRatingCompletedEventHandler setUserRatingCompleted;
        
        /// CodeRemarks
        public event setMinifigCollectionCompletedEventHandler setMinifigCollectionCompleted;
        
        /// CodeRemarks
        public event loginCompletedEventHandler loginCompleted;
        
        /// CodeRemarks
        public event setCollectionDetailCompletedEventHandler setCollectionDetailCompleted;
        
        /// CodeRemarks
        public event getCollectionDetailCompletedEventHandler getCollectionDetailCompleted;
        
        /// CodeRemarks
        public event getCollectionDetailConditionsCompletedEventHandler getCollectionDetailConditionsCompleted;
        
        /// CodeRemarks
        public event checkKeyCompletedEventHandler checkKeyCompleted;
        
        /// CodeRemarks
        public event checkUserHashCompletedEventHandler checkUserHashCompleted;
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getSets", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public sets[] getSets(string apiKey, string userHash, string query, string theme, string subtheme, string setNumber, string year, string owned, string wanted, string orderBy, string pageSize, string pageNumber, string userName) {
            object[] results = this.Invoke("getSets", new object[] {
                        apiKey,
                        userHash,
                        query,
                        theme,
                        subtheme,
                        setNumber,
                        year,
                        owned,
                        wanted,
                        orderBy,
                        pageSize,
                        pageNumber,
                        userName});
            return ((sets[])(results[0]));
        }
        
        /// CodeRemarks
        public void getSetsAsync(string apiKey, string userHash, string query, string theme, string subtheme, string setNumber, string year, string owned, string wanted, string orderBy, string pageSize, string pageNumber, string userName) {
            this.getSetsAsync(apiKey, userHash, query, theme, subtheme, setNumber, year, owned, wanted, orderBy, pageSize, pageNumber, userName, null);
        }
        
        /// CodeRemarks
        public void getSetsAsync(string apiKey, string userHash, string query, string theme, string subtheme, string setNumber, string year, string owned, string wanted, string orderBy, string pageSize, string pageNumber, string userName, object userState) {
            if ((this.getSetsOperationCompleted == null)) {
                this.getSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSetsOperationCompleted);
            }
            this.InvokeAsync("getSets", new object[] {
                        apiKey,
                        userHash,
                        query,
                        theme,
                        subtheme,
                        setNumber,
                        year,
                        owned,
                        wanted,
                        orderBy,
                        pageSize,
                        pageNumber,
                        userName}, this.getSetsOperationCompleted, userState);
        }
        
        private void OngetSetsOperationCompleted(object arg) {
            if ((this.getSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSetsCompleted(this, new getSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getSet", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public sets[] getSet(string apiKey, string userHash, string SetID) {
            object[] results = this.Invoke("getSet", new object[] {
                        apiKey,
                        userHash,
                        SetID});
            return ((sets[])(results[0]));
        }
        
        /// CodeRemarks
        public void getSetAsync(string apiKey, string userHash, string SetID) {
            this.getSetAsync(apiKey, userHash, SetID, null);
        }
        
        /// CodeRemarks
        public void getSetAsync(string apiKey, string userHash, string SetID, object userState) {
            if ((this.getSetOperationCompleted == null)) {
                this.getSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSetOperationCompleted);
            }
            this.InvokeAsync("getSet", new object[] {
                        apiKey,
                        userHash,
                        SetID}, this.getSetOperationCompleted, userState);
        }
        
        private void OngetSetOperationCompleted(object arg) {
            if ((this.getSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSetCompleted(this, new getSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getRecentlyUpdatedSets", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public sets[] getRecentlyUpdatedSets(string apiKey, int minutesAgo) {
            object[] results = this.Invoke("getRecentlyUpdatedSets", new object[] {
                        apiKey,
                        minutesAgo});
            return ((sets[])(results[0]));
        }
        
        /// CodeRemarks
        public void getRecentlyUpdatedSetsAsync(string apiKey, int minutesAgo) {
            this.getRecentlyUpdatedSetsAsync(apiKey, minutesAgo, null);
        }
        
        /// CodeRemarks
        public void getRecentlyUpdatedSetsAsync(string apiKey, int minutesAgo, object userState) {
            if ((this.getRecentlyUpdatedSetsOperationCompleted == null)) {
                this.getRecentlyUpdatedSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRecentlyUpdatedSetsOperationCompleted);
            }
            this.InvokeAsync("getRecentlyUpdatedSets", new object[] {
                        apiKey,
                        minutesAgo}, this.getRecentlyUpdatedSetsOperationCompleted, userState);
        }
        
        private void OngetRecentlyUpdatedSetsOperationCompleted(object arg) {
            if ((this.getRecentlyUpdatedSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRecentlyUpdatedSetsCompleted(this, new getRecentlyUpdatedSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getAdditionalImages", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public additionalImages[] getAdditionalImages(string apiKey, int setID) {
            object[] results = this.Invoke("getAdditionalImages", new object[] {
                        apiKey,
                        setID});
            return ((additionalImages[])(results[0]));
        }
        
        /// CodeRemarks
        public void getAdditionalImagesAsync(string apiKey, int setID) {
            this.getAdditionalImagesAsync(apiKey, setID, null);
        }
        
        /// CodeRemarks
        public void getAdditionalImagesAsync(string apiKey, int setID, object userState) {
            if ((this.getAdditionalImagesOperationCompleted == null)) {
                this.getAdditionalImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAdditionalImagesOperationCompleted);
            }
            this.InvokeAsync("getAdditionalImages", new object[] {
                        apiKey,
                        setID}, this.getAdditionalImagesOperationCompleted, userState);
        }
        
        private void OngetAdditionalImagesOperationCompleted(object arg) {
            if ((this.getAdditionalImagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAdditionalImagesCompleted(this, new getAdditionalImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getReviews", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public reviews[] getReviews(string apiKey, int setID) {
            object[] results = this.Invoke("getReviews", new object[] {
                        apiKey,
                        setID});
            return ((reviews[])(results[0]));
        }
        
        /// CodeRemarks
        public void getReviewsAsync(string apiKey, int setID) {
            this.getReviewsAsync(apiKey, setID, null);
        }
        
        /// CodeRemarks
        public void getReviewsAsync(string apiKey, int setID, object userState) {
            if ((this.getReviewsOperationCompleted == null)) {
                this.getReviewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReviewsOperationCompleted);
            }
            this.InvokeAsync("getReviews", new object[] {
                        apiKey,
                        setID}, this.getReviewsOperationCompleted, userState);
        }
        
        private void OngetReviewsOperationCompleted(object arg) {
            if ((this.getReviewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReviewsCompleted(this, new getReviewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getInstructions", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public instructions[] getInstructions(string apiKey, int setID) {
            object[] results = this.Invoke("getInstructions", new object[] {
                        apiKey,
                        setID});
            return ((instructions[])(results[0]));
        }
        
        /// CodeRemarks
        public void getInstructionsAsync(string apiKey, int setID) {
            this.getInstructionsAsync(apiKey, setID, null);
        }
        
        /// CodeRemarks
        public void getInstructionsAsync(string apiKey, int setID, object userState) {
            if ((this.getInstructionsOperationCompleted == null)) {
                this.getInstructionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInstructionsOperationCompleted);
            }
            this.InvokeAsync("getInstructions", new object[] {
                        apiKey,
                        setID}, this.getInstructionsOperationCompleted, userState);
        }
        
        private void OngetInstructionsOperationCompleted(object arg) {
            if ((this.getInstructionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInstructionsCompleted(this, new getInstructionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getMinifigCollection", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public minifigCollection[] getMinifigCollection(string apiKey, string userHash, string query, string owned, string wanted) {
            object[] results = this.Invoke("getMinifigCollection", new object[] {
                        apiKey,
                        userHash,
                        query,
                        owned,
                        wanted});
            return ((minifigCollection[])(results[0]));
        }
        
        /// CodeRemarks
        public void getMinifigCollectionAsync(string apiKey, string userHash, string query, string owned, string wanted) {
            this.getMinifigCollectionAsync(apiKey, userHash, query, owned, wanted, null);
        }
        
        /// CodeRemarks
        public void getMinifigCollectionAsync(string apiKey, string userHash, string query, string owned, string wanted, object userState) {
            if ((this.getMinifigCollectionOperationCompleted == null)) {
                this.getMinifigCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMinifigCollectionOperationCompleted);
            }
            this.InvokeAsync("getMinifigCollection", new object[] {
                        apiKey,
                        userHash,
                        query,
                        owned,
                        wanted}, this.getMinifigCollectionOperationCompleted, userState);
        }
        
        private void OngetMinifigCollectionOperationCompleted(object arg) {
            if ((this.getMinifigCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMinifigCollectionCompleted(this, new getMinifigCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getThemes", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public themes[] getThemes(string apiKey) {
            object[] results = this.Invoke("getThemes", new object[] {
                        apiKey});
            return ((themes[])(results[0]));
        }
        
        /// CodeRemarks
        public void getThemesAsync(string apiKey) {
            this.getThemesAsync(apiKey, null);
        }
        
        /// CodeRemarks
        public void getThemesAsync(string apiKey, object userState) {
            if ((this.getThemesOperationCompleted == null)) {
                this.getThemesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetThemesOperationCompleted);
            }
            this.InvokeAsync("getThemes", new object[] {
                        apiKey}, this.getThemesOperationCompleted, userState);
        }
        
        private void OngetThemesOperationCompleted(object arg) {
            if ((this.getThemesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getThemesCompleted(this, new getThemesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getSubthemes", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public subthemes[] getSubthemes(string apiKey, string theme) {
            object[] results = this.Invoke("getSubthemes", new object[] {
                        apiKey,
                        theme});
            return ((subthemes[])(results[0]));
        }
        
        /// CodeRemarks
        public void getSubthemesAsync(string apiKey, string theme) {
            this.getSubthemesAsync(apiKey, theme, null);
        }
        
        /// CodeRemarks
        public void getSubthemesAsync(string apiKey, string theme, object userState) {
            if ((this.getSubthemesOperationCompleted == null)) {
                this.getSubthemesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubthemesOperationCompleted);
            }
            this.InvokeAsync("getSubthemes", new object[] {
                        apiKey,
                        theme}, this.getSubthemesOperationCompleted, userState);
        }
        
        private void OngetSubthemesOperationCompleted(object arg) {
            if ((this.getSubthemesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubthemesCompleted(this, new getSubthemesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getYears", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public years[] getYears(string apiKey, string theme) {
            object[] results = this.Invoke("getYears", new object[] {
                        apiKey,
                        theme});
            return ((years[])(results[0]));
        }
        
        /// CodeRemarks
        public void getYearsAsync(string apiKey, string theme) {
            this.getYearsAsync(apiKey, theme, null);
        }
        
        /// CodeRemarks
        public void getYearsAsync(string apiKey, string theme, object userState) {
            if ((this.getYearsOperationCompleted == null)) {
                this.getYearsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetYearsOperationCompleted);
            }
            this.InvokeAsync("getYears", new object[] {
                        apiKey,
                        theme}, this.getYearsOperationCompleted, userState);
        }
        
        private void OngetYearsOperationCompleted(object arg) {
            if ((this.getYearsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getYearsCompleted(this, new getYearsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getThemesForUser", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public themes[] getThemesForUser(string apiKey, string userHash, string owned, string wanted) {
            object[] results = this.Invoke("getThemesForUser", new object[] {
                        apiKey,
                        userHash,
                        owned,
                        wanted});
            return ((themes[])(results[0]));
        }
        
        /// CodeRemarks
        public void getThemesForUserAsync(string apiKey, string userHash, string owned, string wanted) {
            this.getThemesForUserAsync(apiKey, userHash, owned, wanted, null);
        }
        
        /// CodeRemarks
        public void getThemesForUserAsync(string apiKey, string userHash, string owned, string wanted, object userState) {
            if ((this.getThemesForUserOperationCompleted == null)) {
                this.getThemesForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetThemesForUserOperationCompleted);
            }
            this.InvokeAsync("getThemesForUser", new object[] {
                        apiKey,
                        userHash,
                        owned,
                        wanted}, this.getThemesForUserOperationCompleted, userState);
        }
        
        private void OngetThemesForUserOperationCompleted(object arg) {
            if ((this.getThemesForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getThemesForUserCompleted(this, new getThemesForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getSubthemesForUser", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public subthemes[] getSubthemesForUser(string apiKey, string theme, string userHash, string owned, string wanted) {
            object[] results = this.Invoke("getSubthemesForUser", new object[] {
                        apiKey,
                        theme,
                        userHash,
                        owned,
                        wanted});
            return ((subthemes[])(results[0]));
        }
        
        /// CodeRemarks
        public void getSubthemesForUserAsync(string apiKey, string theme, string userHash, string owned, string wanted) {
            this.getSubthemesForUserAsync(apiKey, theme, userHash, owned, wanted, null);
        }
        
        /// CodeRemarks
        public void getSubthemesForUserAsync(string apiKey, string theme, string userHash, string owned, string wanted, object userState) {
            if ((this.getSubthemesForUserOperationCompleted == null)) {
                this.getSubthemesForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubthemesForUserOperationCompleted);
            }
            this.InvokeAsync("getSubthemesForUser", new object[] {
                        apiKey,
                        theme,
                        userHash,
                        owned,
                        wanted}, this.getSubthemesForUserOperationCompleted, userState);
        }
        
        private void OngetSubthemesForUserOperationCompleted(object arg) {
            if ((this.getSubthemesForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubthemesForUserCompleted(this, new getSubthemesForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getYearsForUser", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public years[] getYearsForUser(string apiKey, string theme, string userHash, string owned, string wanted) {
            object[] results = this.Invoke("getYearsForUser", new object[] {
                        apiKey,
                        theme,
                        userHash,
                        owned,
                        wanted});
            return ((years[])(results[0]));
        }
        
        /// CodeRemarks
        public void getYearsForUserAsync(string apiKey, string theme, string userHash, string owned, string wanted) {
            this.getYearsForUserAsync(apiKey, theme, userHash, owned, wanted, null);
        }
        
        /// CodeRemarks
        public void getYearsForUserAsync(string apiKey, string theme, string userHash, string owned, string wanted, object userState) {
            if ((this.getYearsForUserOperationCompleted == null)) {
                this.getYearsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetYearsForUserOperationCompleted);
            }
            this.InvokeAsync("getYearsForUser", new object[] {
                        apiKey,
                        theme,
                        userHash,
                        owned,
                        wanted}, this.getYearsForUserOperationCompleted, userState);
        }
        
        private void OngetYearsForUserOperationCompleted(object arg) {
            if ((this.getYearsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getYearsForUserCompleted(this, new getYearsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getUserNotes", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public userNotes[] getUserNotes(string apiKey, string userHash) {
            object[] results = this.Invoke("getUserNotes", new object[] {
                        apiKey,
                        userHash});
            return ((userNotes[])(results[0]));
        }
        
        /// CodeRemarks
        public void getUserNotesAsync(string apiKey, string userHash) {
            this.getUserNotesAsync(apiKey, userHash, null);
        }
        
        /// CodeRemarks
        public void getUserNotesAsync(string apiKey, string userHash, object userState) {
            if ((this.getUserNotesOperationCompleted == null)) {
                this.getUserNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserNotesOperationCompleted);
            }
            this.InvokeAsync("getUserNotes", new object[] {
                        apiKey,
                        userHash}, this.getUserNotesOperationCompleted, userState);
        }
        
        private void OngetUserNotesOperationCompleted(object arg) {
            if ((this.getUserNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserNotesCompleted(this, new getUserNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getCollectionTotals", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public collectionTotals getCollectionTotals(string apiKey, string userHash) {
            object[] results = this.Invoke("getCollectionTotals", new object[] {
                        apiKey,
                        userHash});
            return ((collectionTotals)(results[0]));
        }
        
        /// CodeRemarks
        public void getCollectionTotalsAsync(string apiKey, string userHash) {
            this.getCollectionTotalsAsync(apiKey, userHash, null);
        }
        
        /// CodeRemarks
        public void getCollectionTotalsAsync(string apiKey, string userHash, object userState) {
            if ((this.getCollectionTotalsOperationCompleted == null)) {
                this.getCollectionTotalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCollectionTotalsOperationCompleted);
            }
            this.InvokeAsync("getCollectionTotals", new object[] {
                        apiKey,
                        userHash}, this.getCollectionTotalsOperationCompleted, userState);
        }
        
        private void OngetCollectionTotalsOperationCompleted(object arg) {
            if ((this.getCollectionTotalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCollectionTotalsCompleted(this, new getCollectionTotalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/setCollection", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setCollection(string apiKey, string userHash, int setID, int qtyOwned, int wanted) {
            object[] results = this.Invoke("setCollection", new object[] {
                        apiKey,
                        userHash,
                        setID,
                        qtyOwned,
                        wanted});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void setCollectionAsync(string apiKey, string userHash, int setID, int qtyOwned, int wanted) {
            this.setCollectionAsync(apiKey, userHash, setID, qtyOwned, wanted, null);
        }
        
        /// CodeRemarks
        public void setCollectionAsync(string apiKey, string userHash, int setID, int qtyOwned, int wanted, object userState) {
            if ((this.setCollectionOperationCompleted == null)) {
                this.setCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetCollectionOperationCompleted);
            }
            this.InvokeAsync("setCollection", new object[] {
                        apiKey,
                        userHash,
                        setID,
                        qtyOwned,
                        wanted}, this.setCollectionOperationCompleted, userState);
        }
        
        private void OnsetCollectionOperationCompleted(object arg) {
            if ((this.setCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setCollectionCompleted(this, new setCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/setCollection_owns", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setCollection_owns(string apiKey, string userHash, int setID, int owned) {
            object[] results = this.Invoke("setCollection_owns", new object[] {
                        apiKey,
                        userHash,
                        setID,
                        owned});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void setCollection_ownsAsync(string apiKey, string userHash, int setID, int owned) {
            this.setCollection_ownsAsync(apiKey, userHash, setID, owned, null);
        }
        
        /// CodeRemarks
        public void setCollection_ownsAsync(string apiKey, string userHash, int setID, int owned, object userState) {
            if ((this.setCollection_ownsOperationCompleted == null)) {
                this.setCollection_ownsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetCollection_ownsOperationCompleted);
            }
            this.InvokeAsync("setCollection_owns", new object[] {
                        apiKey,
                        userHash,
                        setID,
                        owned}, this.setCollection_ownsOperationCompleted, userState);
        }
        
        private void OnsetCollection_ownsOperationCompleted(object arg) {
            if ((this.setCollection_ownsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setCollection_ownsCompleted(this, new setCollection_ownsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/setCollection_wants", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setCollection_wants(string apiKey, string userHash, int setID, int wanted) {
            object[] results = this.Invoke("setCollection_wants", new object[] {
                        apiKey,
                        userHash,
                        setID,
                        wanted});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void setCollection_wantsAsync(string apiKey, string userHash, int setID, int wanted) {
            this.setCollection_wantsAsync(apiKey, userHash, setID, wanted, null);
        }
        
        /// CodeRemarks
        public void setCollection_wantsAsync(string apiKey, string userHash, int setID, int wanted, object userState) {
            if ((this.setCollection_wantsOperationCompleted == null)) {
                this.setCollection_wantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetCollection_wantsOperationCompleted);
            }
            this.InvokeAsync("setCollection_wants", new object[] {
                        apiKey,
                        userHash,
                        setID,
                        wanted}, this.setCollection_wantsOperationCompleted, userState);
        }
        
        private void OnsetCollection_wantsOperationCompleted(object arg) {
            if ((this.setCollection_wantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setCollection_wantsCompleted(this, new setCollection_wantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/setCollection_userNotes", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setCollection_userNotes(string apiKey, string userHash, int setID, string notes) {
            object[] results = this.Invoke("setCollection_userNotes", new object[] {
                        apiKey,
                        userHash,
                        setID,
                        notes});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void setCollection_userNotesAsync(string apiKey, string userHash, int setID, string notes) {
            this.setCollection_userNotesAsync(apiKey, userHash, setID, notes, null);
        }
        
        /// CodeRemarks
        public void setCollection_userNotesAsync(string apiKey, string userHash, int setID, string notes, object userState) {
            if ((this.setCollection_userNotesOperationCompleted == null)) {
                this.setCollection_userNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetCollection_userNotesOperationCompleted);
            }
            this.InvokeAsync("setCollection_userNotes", new object[] {
                        apiKey,
                        userHash,
                        setID,
                        notes}, this.setCollection_userNotesOperationCompleted, userState);
        }
        
        private void OnsetCollection_userNotesOperationCompleted(object arg) {
            if ((this.setCollection_userNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setCollection_userNotesCompleted(this, new setCollection_userNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/setCollection_qtyOwned", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setCollection_qtyOwned(string apiKey, string userHash, int setID, int qtyOwned) {
            object[] results = this.Invoke("setCollection_qtyOwned", new object[] {
                        apiKey,
                        userHash,
                        setID,
                        qtyOwned});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void setCollection_qtyOwnedAsync(string apiKey, string userHash, int setID, int qtyOwned) {
            this.setCollection_qtyOwnedAsync(apiKey, userHash, setID, qtyOwned, null);
        }
        
        /// CodeRemarks
        public void setCollection_qtyOwnedAsync(string apiKey, string userHash, int setID, int qtyOwned, object userState) {
            if ((this.setCollection_qtyOwnedOperationCompleted == null)) {
                this.setCollection_qtyOwnedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetCollection_qtyOwnedOperationCompleted);
            }
            this.InvokeAsync("setCollection_qtyOwned", new object[] {
                        apiKey,
                        userHash,
                        setID,
                        qtyOwned}, this.setCollection_qtyOwnedOperationCompleted, userState);
        }
        
        private void OnsetCollection_qtyOwnedOperationCompleted(object arg) {
            if ((this.setCollection_qtyOwnedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setCollection_qtyOwnedCompleted(this, new setCollection_qtyOwnedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/setUserRating", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setUserRating(string apiKey, string userHash, int setID, int rating) {
            object[] results = this.Invoke("setUserRating", new object[] {
                        apiKey,
                        userHash,
                        setID,
                        rating});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void setUserRatingAsync(string apiKey, string userHash, int setID, int rating) {
            this.setUserRatingAsync(apiKey, userHash, setID, rating, null);
        }
        
        /// CodeRemarks
        public void setUserRatingAsync(string apiKey, string userHash, int setID, int rating, object userState) {
            if ((this.setUserRatingOperationCompleted == null)) {
                this.setUserRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUserRatingOperationCompleted);
            }
            this.InvokeAsync("setUserRating", new object[] {
                        apiKey,
                        userHash,
                        setID,
                        rating}, this.setUserRatingOperationCompleted, userState);
        }
        
        private void OnsetUserRatingOperationCompleted(object arg) {
            if ((this.setUserRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setUserRatingCompleted(this, new setUserRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/setMinifigCollection", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setMinifigCollection(string apiKey, string userHash, string minifigNumber, int qtyOwned, int wanted) {
            object[] results = this.Invoke("setMinifigCollection", new object[] {
                        apiKey,
                        userHash,
                        minifigNumber,
                        qtyOwned,
                        wanted});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void setMinifigCollectionAsync(string apiKey, string userHash, string minifigNumber, int qtyOwned, int wanted) {
            this.setMinifigCollectionAsync(apiKey, userHash, minifigNumber, qtyOwned, wanted, null);
        }
        
        /// CodeRemarks
        public void setMinifigCollectionAsync(string apiKey, string userHash, string minifigNumber, int qtyOwned, int wanted, object userState) {
            if ((this.setMinifigCollectionOperationCompleted == null)) {
                this.setMinifigCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetMinifigCollectionOperationCompleted);
            }
            this.InvokeAsync("setMinifigCollection", new object[] {
                        apiKey,
                        userHash,
                        minifigNumber,
                        qtyOwned,
                        wanted}, this.setMinifigCollectionOperationCompleted, userState);
        }
        
        private void OnsetMinifigCollectionOperationCompleted(object arg) {
            if ((this.setMinifigCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setMinifigCollectionCompleted(this, new setMinifigCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/login", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string login(string apiKey, string username, string password) {
            object[] results = this.Invoke("login", new object[] {
                        apiKey,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void loginAsync(string apiKey, string username, string password) {
            this.loginAsync(apiKey, username, password, null);
        }
        
        /// CodeRemarks
        public void loginAsync(string apiKey, string username, string password, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        apiKey,
                        username,
                        password}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/setCollectionDetail", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setCollectionDetail(string apiKey, string userHash, collectionDetails detail) {
            object[] results = this.Invoke("setCollectionDetail", new object[] {
                        apiKey,
                        userHash,
                        detail});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void setCollectionDetailAsync(string apiKey, string userHash, collectionDetails detail) {
            this.setCollectionDetailAsync(apiKey, userHash, detail, null);
        }
        
        /// CodeRemarks
        public void setCollectionDetailAsync(string apiKey, string userHash, collectionDetails detail, object userState) {
            if ((this.setCollectionDetailOperationCompleted == null)) {
                this.setCollectionDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetCollectionDetailOperationCompleted);
            }
            this.InvokeAsync("setCollectionDetail", new object[] {
                        apiKey,
                        userHash,
                        detail}, this.setCollectionDetailOperationCompleted, userState);
        }
        
        private void OnsetCollectionDetailOperationCompleted(object arg) {
            if ((this.setCollectionDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setCollectionDetailCompleted(this, new setCollectionDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getCollectionDetail", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public collectionDetails[] getCollectionDetail(string apiKey, string userHash, string SetID) {
            object[] results = this.Invoke("getCollectionDetail", new object[] {
                        apiKey,
                        userHash,
                        SetID});
            return ((collectionDetails[])(results[0]));
        }
        
        /// CodeRemarks
        public void getCollectionDetailAsync(string apiKey, string userHash, string SetID) {
            this.getCollectionDetailAsync(apiKey, userHash, SetID, null);
        }
        
        /// CodeRemarks
        public void getCollectionDetailAsync(string apiKey, string userHash, string SetID, object userState) {
            if ((this.getCollectionDetailOperationCompleted == null)) {
                this.getCollectionDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCollectionDetailOperationCompleted);
            }
            this.InvokeAsync("getCollectionDetail", new object[] {
                        apiKey,
                        userHash,
                        SetID}, this.getCollectionDetailOperationCompleted, userState);
        }
        
        private void OngetCollectionDetailOperationCompleted(object arg) {
            if ((this.getCollectionDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCollectionDetailCompleted(this, new getCollectionDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/getCollectionDetailConditions", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public conditions[] getCollectionDetailConditions(string apiKey, string which) {
            object[] results = this.Invoke("getCollectionDetailConditions", new object[] {
                        apiKey,
                        which});
            return ((conditions[])(results[0]));
        }
        
        /// CodeRemarks
        public void getCollectionDetailConditionsAsync(string apiKey, string which) {
            this.getCollectionDetailConditionsAsync(apiKey, which, null);
        }
        
        /// CodeRemarks
        public void getCollectionDetailConditionsAsync(string apiKey, string which, object userState) {
            if ((this.getCollectionDetailConditionsOperationCompleted == null)) {
                this.getCollectionDetailConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCollectionDetailConditionsOperationCompleted);
            }
            this.InvokeAsync("getCollectionDetailConditions", new object[] {
                        apiKey,
                        which}, this.getCollectionDetailConditionsOperationCompleted, userState);
        }
        
        private void OngetCollectionDetailConditionsOperationCompleted(object arg) {
            if ((this.getCollectionDetailConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCollectionDetailConditionsCompleted(this, new getCollectionDetailConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/checkKey", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string checkKey(string apiKey) {
            object[] results = this.Invoke("checkKey", new object[] {
                        apiKey});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void checkKeyAsync(string apiKey) {
            this.checkKeyAsync(apiKey, null);
        }
        
        /// CodeRemarks
        public void checkKeyAsync(string apiKey, object userState) {
            if ((this.checkKeyOperationCompleted == null)) {
                this.checkKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckKeyOperationCompleted);
            }
            this.InvokeAsync("checkKey", new object[] {
                        apiKey}, this.checkKeyOperationCompleted, userState);
        }
        
        private void OncheckKeyOperationCompleted(object arg) {
            if ((this.checkKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkKeyCompleted(this, new checkKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://brickset.com/api/checkUserHash", RequestNamespace="https://brickset.com/api/", ResponseNamespace="https://brickset.com/api/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string checkUserHash(string userHash) {
            object[] results = this.Invoke("checkUserHash", new object[] {
                        userHash});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void checkUserHashAsync(string userHash) {
            this.checkUserHashAsync(userHash, null);
        }
        
        /// CodeRemarks
        public void checkUserHashAsync(string userHash, object userState) {
            if ((this.checkUserHashOperationCompleted == null)) {
                this.checkUserHashOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckUserHashOperationCompleted);
            }
            this.InvokeAsync("checkUserHash", new object[] {
                        userHash}, this.checkUserHashOperationCompleted, userState);
        }
        
        private void OncheckUserHashOperationCompleted(object arg) {
            if ((this.checkUserHashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkUserHashCompleted(this, new checkUserHashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://brickset.com/api/")]
    public partial class sets {
        
        /// <remarks/>
        public int setID;
        
        /// <remarks/>
        public string number;
        
        /// <remarks/>
        public int numberVariant;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string year;
        
        /// <remarks/>
        public string theme;
        
        /// <remarks/>
        public string themeGroup;
        
        /// <remarks/>
        public string subtheme;
        
        /// <remarks/>
        public string pieces;
        
        /// <remarks/>
        public string minifigs;
        
        /// <remarks/>
        public bool image;
        
        /// <remarks/>
        public string imageFilename;
        
        /// <remarks/>
        public string thumbnailURL;
        
        /// <remarks/>
        public string largeThumbnailURL;
        
        /// <remarks/>
        public string imageURL;
        
        /// <remarks/>
        public string bricksetURL;
        
        /// <remarks/>
        public bool released;
        
        /// <remarks/>
        public bool owned;
        
        /// <remarks/>
        public bool wanted;
        
        /// <remarks/>
        public int qtyOwned;
        
        /// <remarks/>
        public string userNotes;
        
        /// <remarks/>
        public int ACMDataCount;
        
        /// <remarks/>
        public int ownedByTotal;
        
        /// <remarks/>
        public int wantedByTotal;
        
        /// <remarks/>
        public string UKRetailPrice;
        
        /// <remarks/>
        public string USRetailPrice;
        
        /// <remarks/>
        public string CARetailPrice;
        
        /// <remarks/>
        public string EURetailPrice;
        
        /// <remarks/>
        public string USDateAddedToSAH;
        
        /// <remarks/>
        public string USDateRemovedFromSAH;
        
        /// <remarks/>
        public decimal rating;
        
        /// <remarks/>
        public int reviewCount;
        
        /// <remarks/>
        public string packagingType;
        
        /// <remarks/>
        public string availability;
        
        /// <remarks/>
        public int instructionsCount;
        
        /// <remarks/>
        public int additionalImageCount;
        
        /// <remarks/>
        public string ageMin;
        
        /// <remarks/>
        public string ageMax;
        
        /// <remarks/>
        public string height;
        
        /// <remarks/>
        public string width;
        
        /// <remarks/>
        public string depth;
        
        /// <remarks/>
        public string weight;
        
        /// <remarks/>
        public string category;
        
        /// <remarks/>
        public string notes;
        
        /// <remarks/>
        public string userRating;
        
        /// <remarks/>
        public string tags;
        
        /// <remarks/>
        public string EAN;
        
        /// <remarks/>
        public string UPC;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public System.DateTime lastUpdated;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://brickset.com/api/")]
    public partial class conditions {
        
        /// <remarks/>
        public string condition;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://brickset.com/api/")]
    public partial class collectionDetails {
        
        /// <remarks/>
        public int collectionID;
        
        /// <remarks/>
        public string dateAcquired;
        
        /// <remarks/>
        public string currency;
        
        /// <remarks/>
        public decimal pricePaid;
        
        /// <remarks/>
        public decimal additionalPricePaid;
        
        /// <remarks/>
        public decimal currentEstimatedValue;
        
        /// <remarks/>
        public string conditionWhenAcquired;
        
        /// <remarks/>
        public string acquiredFrom;
        
        /// <remarks/>
        public string conditionNow;
        
        /// <remarks/>
        public string location;
        
        /// <remarks/>
        public string notes;
        
        /// <remarks/>
        public bool parts;
        
        /// <remarks/>
        public bool minifigs;
        
        /// <remarks/>
        public bool instructions;
        
        /// <remarks/>
        public bool box;
        
        /// <remarks/>
        public bool willTrade;
        
        /// <remarks/>
        public bool modified;
        
        /// <remarks/>
        public bool deleted;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://brickset.com/api/")]
    public partial class collectionTotals {
        
        /// <remarks/>
        public int totalSetsOwned;
        
        /// <remarks/>
        public int totalDistinctSetsOwned;
        
        /// <remarks/>
        public int totalSetsWanted;
        
        /// <remarks/>
        public int totalMinifigsOwned;
        
        /// <remarks/>
        public int totalMinifigsWanted;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://brickset.com/api/")]
    public partial class userNotes {
        
        /// <remarks/>
        public int setID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("userNotes")]
        public string userNotes1;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://brickset.com/api/")]
    public partial class years {
        
        /// <remarks/>
        public string theme;
        
        /// <remarks/>
        public string year;
        
        /// <remarks/>
        public int setCount;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://brickset.com/api/")]
    public partial class subthemes {
        
        /// <remarks/>
        public string theme;
        
        /// <remarks/>
        public string subtheme;
        
        /// <remarks/>
        public int setCount;
        
        /// <remarks/>
        public int yearFrom;
        
        /// <remarks/>
        public int yearTo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://brickset.com/api/")]
    public partial class themes {
        
        /// <remarks/>
        public string theme;
        
        /// <remarks/>
        public int setCount;
        
        /// <remarks/>
        public int subthemeCount;
        
        /// <remarks/>
        public int yearFrom;
        
        /// <remarks/>
        public int yearTo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://brickset.com/api/")]
    public partial class minifigCollection {
        
        /// <remarks/>
        public string minifigNumber;
        
        /// <remarks/>
        public int ownedInSets;
        
        /// <remarks/>
        public int ownedLoose;
        
        /// <remarks/>
        public int ownedTotal;
        
        /// <remarks/>
        public bool wanted;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://brickset.com/api/")]
    public partial class instructions {
        
        /// <remarks/>
        public string URL;
        
        /// <remarks/>
        public string description;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://brickset.com/api/")]
    public partial class reviews {
        
        /// <remarks/>
        public string author;
        
        /// <remarks/>
        public System.DateTime datePosted;
        
        /// <remarks/>
        public int overallRating;
        
        /// <remarks/>
        public int parts;
        
        /// <remarks/>
        public int buildingExperience;
        
        /// <remarks/>
        public int playability;
        
        /// <remarks/>
        public int valueForMoney;
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string review;
        
        /// <remarks/>
        public bool HTML;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://brickset.com/api/")]
    public partial class additionalImages {
        
        /// <remarks/>
        public string thumbnailURL;
        
        /// <remarks/>
        public string largeThumbnailURL;
        
        /// <remarks/>
        public string imageURL;
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getSetsCompletedEventHandler(object sender, getSetsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public sets[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sets[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getSetCompletedEventHandler(object sender, getSetCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public sets[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sets[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getRecentlyUpdatedSetsCompletedEventHandler(object sender, getRecentlyUpdatedSetsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRecentlyUpdatedSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRecentlyUpdatedSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public sets[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((sets[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getAdditionalImagesCompletedEventHandler(object sender, getAdditionalImagesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAdditionalImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAdditionalImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public additionalImages[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((additionalImages[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getReviewsCompletedEventHandler(object sender, getReviewsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReviewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReviewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public reviews[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((reviews[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getInstructionsCompletedEventHandler(object sender, getInstructionsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInstructionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInstructionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public instructions[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((instructions[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getMinifigCollectionCompletedEventHandler(object sender, getMinifigCollectionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMinifigCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMinifigCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public minifigCollection[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((minifigCollection[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getThemesCompletedEventHandler(object sender, getThemesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getThemesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getThemesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public themes[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((themes[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getSubthemesCompletedEventHandler(object sender, getSubthemesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubthemesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubthemesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public subthemes[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((subthemes[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getYearsCompletedEventHandler(object sender, getYearsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getYearsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getYearsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public years[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((years[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getThemesForUserCompletedEventHandler(object sender, getThemesForUserCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getThemesForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getThemesForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public themes[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((themes[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getSubthemesForUserCompletedEventHandler(object sender, getSubthemesForUserCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubthemesForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubthemesForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public subthemes[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((subthemes[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getYearsForUserCompletedEventHandler(object sender, getYearsForUserCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getYearsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getYearsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public years[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((years[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getUserNotesCompletedEventHandler(object sender, getUserNotesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public userNotes[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userNotes[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getCollectionTotalsCompletedEventHandler(object sender, getCollectionTotalsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCollectionTotalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCollectionTotalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public collectionTotals Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((collectionTotals)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void setCollectionCompletedEventHandler(object sender, setCollectionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void setCollection_ownsCompletedEventHandler(object sender, setCollection_ownsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setCollection_ownsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setCollection_ownsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void setCollection_wantsCompletedEventHandler(object sender, setCollection_wantsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setCollection_wantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setCollection_wantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void setCollection_userNotesCompletedEventHandler(object sender, setCollection_userNotesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setCollection_userNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setCollection_userNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void setCollection_qtyOwnedCompletedEventHandler(object sender, setCollection_qtyOwnedCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setCollection_qtyOwnedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setCollection_qtyOwnedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void setUserRatingCompletedEventHandler(object sender, setUserRatingCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setUserRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setUserRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void setMinifigCollectionCompletedEventHandler(object sender, setMinifigCollectionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setMinifigCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setMinifigCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void setCollectionDetailCompletedEventHandler(object sender, setCollectionDetailCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setCollectionDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setCollectionDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getCollectionDetailCompletedEventHandler(object sender, getCollectionDetailCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCollectionDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCollectionDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public collectionDetails[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((collectionDetails[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void getCollectionDetailConditionsCompletedEventHandler(object sender, getCollectionDetailConditionsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCollectionDetailConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCollectionDetailConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public conditions[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((conditions[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void checkKeyCompletedEventHandler(object sender, checkKeyCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    public delegate void checkUserHashCompletedEventHandler(object sender, checkUserHashCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.7.2.21")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkUserHashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkUserHashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
